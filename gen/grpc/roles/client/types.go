// Code generated by goa v3.2.3, DO NOT EDIT.
//
// roles gRPC client types
//
// Command:
// $ goa gen users/design

package client

import (
	rolespb "users/gen/grpc/roles/pb"
	roles "users/gen/roles"
	rolesviews "users/gen/roles/views"

	goa "goa.design/goa/v3/pkg"
)

// NewListRequest builds the gRPC request type from the payload of the "list"
// endpoint of the "roles" service.
func NewListRequest() *rolespb.ListRequest {
	message := &rolespb.ListRequest{}
	return message
}

// NewListResult builds the result type of the "list" endpoint of the "roles"
// service from the gRPC response type.
func NewListResult(message *rolespb.StoredRoleCollection) rolesviews.StoredRoleCollectionView {
	result := make([]*rolesviews.StoredRoleView, len(message.Field))
	for i, val := range message.Field {
		result[i] = &rolesviews.StoredRoleView{
			Name: &val.Name,
		}
		if val.Description != "" {
			result[i].Description = &val.Description
		}
	}
	return result
}

// NewShowRequest builds the gRPC request type from the payload of the "show"
// endpoint of the "roles" service.
func NewShowRequest(payload *roles.ShowPayload) *rolespb.ShowRequest {
	message := &rolespb.ShowRequest{
		Name: payload.Name,
	}
	return message
}

// NewShowResult builds the result type of the "show" endpoint of the "roles"
// service from the gRPC response type.
func NewShowResult(message *rolespb.ShowResponse) *rolesviews.StoredRoleView {
	result := &rolesviews.StoredRoleView{
		Name: &message.Name,
	}
	if message.Description != "" {
		result.Description = &message.Description
	}
	return result
}

// NewShowNotFoundError builds the error type of the "show" endpoint of the
// "roles" service from the gRPC error response type.
func NewShowNotFoundError(message *rolespb.ShowNotFoundError) *roles.NotFound {
	er := &roles.NotFound{
		Message: message.Message_,
		ID:      message.Id,
	}
	return er
}

// NewAddRequest builds the gRPC request type from the payload of the "add"
// endpoint of the "roles" service.
func NewAddRequest(payload *roles.Role) *rolespb.AddRequest {
	message := &rolespb.AddRequest{
		Name: payload.Name,
	}
	if payload.Description != nil {
		message.Description = *payload.Description
	}
	return message
}

// NewAddResult builds the result type of the "add" endpoint of the "roles"
// service from the gRPC response type.
func NewAddResult(message *rolespb.AddResponse) string {
	result := message.Field
	return result
}

// NewUpdateRequest builds the gRPC request type from the payload of the
// "update" endpoint of the "roles" service.
func NewUpdateRequest(payload *roles.Role) *rolespb.UpdateRequest {
	message := &rolespb.UpdateRequest{
		Name: payload.Name,
	}
	if payload.Description != nil {
		message.Description = *payload.Description
	}
	return message
}

// NewUpdateResult builds the result type of the "update" endpoint of the
// "roles" service from the gRPC response type.
func NewUpdateResult(message *rolespb.UpdateResponse) string {
	result := message.Field
	return result
}

// NewRemoveRequest builds the gRPC request type from the payload of the
// "remove" endpoint of the "roles" service.
func NewRemoveRequest(payload *roles.RemovePayload) *rolespb.RemoveRequest {
	message := &rolespb.RemoveRequest{
		Name: payload.Name,
	}
	return message
}

// ValidateStoredRoleCollection runs the validations defined on
// StoredRoleCollection.
func ValidateStoredRoleCollection(message *rolespb.StoredRoleCollection) (err error) {
	for _, e := range message.Field {
		if e != nil {
			if err2 := ValidateStoredRole(e); err2 != nil {
				err = goa.MergeErrors(err, err2)
			}
		}
	}
	return
}

// ValidateStoredRole runs the validations defined on StoredRole.
func ValidateStoredRole(message *rolespb.StoredRole) (err error) {
	err = goa.MergeErrors(err, goa.ValidatePattern("message.name", message.Name, "[a-z]+[a-z0-9]*"))
	return
}

// ValidateShowResponse runs the validations defined on ShowResponse.
func ValidateShowResponse(message *rolespb.ShowResponse) (err error) {
	err = goa.MergeErrors(err, goa.ValidatePattern("message.name", message.Name, "[a-z]+[a-z0-9]*"))
	return
}
